version: '3.4'

#contanarise all services
services:

  frontend:
    image: boonyew/csc2102_mini_project:frontend
    build:
      #context: ../../Mini-Project-Cindy/ShopAndGoMicroservices-cindy-frontend/frontend
      context: ../frontend
      dockerfile: dockerfile
  catalogdb:
    image: postgres

  distributedcache:
    image: redis

  orderdb:
    image: mcr.microsoft.com/mssql/server

  financedb:
    image: postgres

  # trackingdb:
  #   image: postgres

  shippingdb:
    image: postgres

  jobschedulerdb:
    image: mcr.microsoft.com/mssql/server

  feedbackdb:
    image: postgres

  messagebroker:
    image: rabbitmq:management

  catalog.api:
    image: boonyew/csc2102_mini_project:catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile

  ordering.api:
    image: boonyew/csc2102_mini_project:orderingapi
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile

  finance.api:
    image: boonyew/csc2102_mini_project:financeapi
    build:
      context: .
      dockerfile: Services/Finance/Finance.API/Dockerfile

  jobscheduler.api:
    image: boonyew/csc2102_mini_project:jobschedulerapi
    build:
      context: .
      dockerfile: Services/JobScheduler/JobScheduler.API/Dockerfile

  feedback.api:
    image: boonyew/csc2102_mini_project:feedbackapi
    build:
      context: .
      dockerfile: Services/Feedback/Feedback.API/Dockerfile

  shipping.api:
    image: boonyew/csc2102_mini_project:shippingapi
    build:
      context: .
      dockerfile: Services/Shipping/Shipping.API/Dockerfile

  chip-api:
    build:
        context: ./Services/3rd_partyService
        dockerfile: Dockerfile
    command: sh -c "uvicorn main:app --reload --port=8080 --host=0.0.0.0"  # Listen on port 8080
    ports:
        - "6006:8080"  # Map host port 6006 to container port 8080
    volumes:
        - ./Services/3rd_partyService:/app

volumes:
  postgres_catalog:
  postgres_finance:
  postgres_tracking:
  postgres_feedback:


